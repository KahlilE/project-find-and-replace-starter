// You should NOT change the HTML or CSS in this project (at least until you reach
// the bonus objectives). Focus on the JavaScript.

const findInput = document.querySelector(".find-input")
const replaceInput = document.querySelector(".replace-input")
const replaceAllButton = document.querySelector(".replace-all-button")










// The following variable holds your OUTER ARRAY of row elements.
// Later you will need an OUTER LOOP to loop over the individual elements within
// this array.
const rowElements = document.querySelectorAll(".row")

// When you call the function belwo, it will get and return an INNER ARRAY
// containing the cell elements for a given row.
// Call this function from WITHIN your row elements loop. Then you will, in turn,
// need to loop over the resulting cell elements. But where should this whole
// NESTED LOOP go? Think through the user's experience: when should WHAT happen? 
function getCellElements(currentRowElement) {
  return currentRowElement.querySelectorAll(".cell")
}


// YOUR CODE GOES HERE



replaceAllButton.addEventListener('click', function () {
  const findInputValue = findInput.value
  const replaceInputValue = replaceInput.value

  for (rowCounter = 0; rowCounter < rowElements.length; rowCounter += 1) {

    const newCounter = rowElements[rowCounter]
    let cellElements = getCellElements(newCounter)


    for (cellCounter = 0; cellCounter < cellElements.length; cellCounter += 1) {
      let cellindex = cellElements[cellCounter]

      while (cellElements[cellCounter].innerHTML.includes(findInputValue)) {
        let newString = cellElements[cellCounter].innerHTML.replace(findInputValue, replaceInputValue)
        cellElements[cellCounter].innerHTML = newString

        console.log(newString)
      }


    }



  }
})

// function subtract(a, b) {
//   return a - b
// }
// let difference = subtract(6, 2)
// console.log(difference)




// for (let sectionIndex = 0; sectionIndex < menu.length; sectionIndex += 1) {
// 	const menuSection = menu[sectionIndex]; // [soda,water,beer]
// 	console.log('Section ' + sectionIndex);

// 	for (let itemIndex = 0; itemIndex < menuSection.length; itemIndex += 1) {
// 		const sectionItem = menuSection[itemIndex]; // "beer"
// 		console.log(itemIndex + ': ' + sectionItem);
// 	}
// }

// console.log('I want a ' + menu[2][2] + '!');





// // 1. your findInputValue =  ... and replaceInputValue = ... need to be inside your click handler function.  

// // 2. your 'newCounter' variable is a single element from the rowElements array.  you will use that row element to call the getCellElements function which will create an array of all the cell elements in that row. eg:  let cellElements = getCellElements(newCounter)

// // 3. your second loop should loop over the cell elements array, and for each cell element (cellElements[cellCounter]), check if the cellElements[cellCounter}.innerHTML includes the find input value, and while it does replace it with the replace input value.

//4. replace takes two arguments.  .replace(searchTerm, replaceTerm), and it does not change the original string, but instead returns a new string.  so you would have to replace the currentCell.innerHTML with the new string that is generated by the .replace() function call.

